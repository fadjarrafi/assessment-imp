version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: assessment_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Laravel API Backend
  laravel:
    build:
      context: .
      dockerfile: laravel.Dockerfile
    container_name: assessment_laravel
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      APP_NAME: "Laravel Assessment"
      APP_ENV: production
      APP_KEY: base64:your_generated_key_here
      APP_DEBUG: "false"
      APP_URL: http://localhost:8000

      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel_db
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_password

      SANCTUM_STATEFUL_DOMAINS: localhost:3001
      SESSION_DOMAIN: localhost
    ports:
      - "8000:80"
    volumes:
      - laravel_storage:/var/www/html/storage
    networks:
      - app_network

  # Next.js Frontend
  nextjs:
    build:
      context: .
      dockerfile: nextjs.Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000/api/v1}
    container_name: assessment_nextjs
    restart: unless-stopped
    depends_on:
      - laravel
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000/api/v1}
      NODE_ENV: production
    ports:
      - "3001:3000"
    networks:
      - app_network

volumes:
  mysql_data:
    driver: local
  laravel_storage:
    driver: local

networks:
  app_network:
    driver: bridge
